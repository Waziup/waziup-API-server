swagger: '2.0'
info:
  title: WAZIUP API
  description: Applications API
  version: 1.0.0
host: '127.0.0.1:8000'
schemes:
  - http
basePath: /api/v1
produces:
  - application/json
consumes:
  - application/json
definitions:
  Sensor:
    type: object
    properties:
      id:
        type: string
        description: UUID of the sensor
        example: "0d710b12-27e8-433d-ab3a-e05b7127eeaa"
      gateway_id:
        type: string
        description: UUID of the gateway
        example: "0d710b12-27e8-433d-ab3a-e05b7127eeaa"
      name:
        type: string
        description: name of the sensor
        example: "Sensor1"
      owner:
        type: string
        description: name of the sensor
        example: "cdupont"
      sensor-kind:
        type: string
        description: kind of the sensor
        example: "Soil temperature sensor"
      measurements:
        type: array
        $ref: '#/definitions/Measurement'
      location:
        $ref: '#/definitions/Location'
  Location:
    type: object
    description: location is a pair [latitude, longitude] with the coordinates on earth in decimal notation (e.g. [40.418889, 35.89389]).
    properties:
      latitude:
        type: number
        example: 5.3600
      longitude:
        type: number
        example: 4.0083
  Measurement:
    type: object
    properties:
      id:
        type: string
        description: UUID of the measurement 
        example: "0d710b12-27e8-433d-ab3a-e05b7127eeaa"
      name:
        type: string
        description: name of the measurement
        example: "TC1"
      dimension:
        type: string
        description: physical dimension of the measurement
        example: "temperature"
      unit:
        type: string
        description: unit of the measurement
        example: "Degree C"
      values:
        type: array
        items:
          $ref: '#/definitions/MeasurementValue'
  MeasurementValue:
    type: object
    properties:
      value:
        type: "number"
        format: "float"
        description: value of the measurement 
        example: "25.6"
      timestamp:
        type: "string"
        format: "dateTime"
        description: time of the measurement
        example: "2016-06-08T18:20:27.873Z"
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  AuthBody:
    type: object
    title: credentials
    required:
      - username
      - password
    properties:
      username:
        type: string
        description: Admin username
      password:
        type: string
        description: Admin password
  UserUpdateBody:
    type: object
    title: userupdate
    required:
      - firstName
      - lastName
    properties:
      firstName:
        type: string
        description: User's First Name
      lastName:
        type: string
        description: User's Last Name
      id:
        type: string
        description: User id
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header



paths:
  /sensors:
    get:
      summary: Sensor data
      description:    
      tags:
        - Sensors
      produces:
      - "application/json"
      responses:
        '200':
          description: 
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sensor"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create sensors
      description: |
        Endpoint to create sensing devices.
      tags:
        - Sensors
      schema:
        $ref: '#/definitions/Sensor'
      responses:
        '201':
          description: Sensor created succesfully
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: Historical  data
      description: |
        Query domain historical  data  .    
      tags:
        - Historical  data
      responses:
        '200':
          description: Array
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/auth:
    post:
      tags:
        - Users
      summary: Get the access token for subsequent calls
      parameters:
        - name: credentials
          in: body
          description: auth credentials
          required: true
          schema:
            $ref: '#/definitions/AuthBody'
      responses:
        '200':
          description: Return the access token
        '404':
          description: Something wrong happened
  '/users/search/{realm}':
    get:
      tags:
        - Users
      summary: Search users with specific criteria
      security:
        - Bearer: []
      parameters:
        - name: realm
          in: path
          required: true
          description: The domain to retrieve the users from
          type: string
      responses:
        '200':
          description: return filtered users
        '404':
          description: Something wrong happened
  '/users/{realm}':
    get:
      tags:
        - Users
      summary: Get all users in a realm
      security:
        - Bearer: []
      parameters:
        - name: realm
          in: path
          required: true
          description: The domain to retrieve the users from
          type: string
      responses:
        '200':
          description: return users
        '404':
          description: Something wrong happened
  '/users/{realm}/{userid}':
    get:
      tags:
        - Users
      security:
        - Bearer: []
      parameters:
        - name: realm
          in: path
          required: true
          description: The domain to retrieve the user from
          type: string
        - name: userid
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
      responses:
        '200':
          description: Return the user with the specified id
        '404':
          description: Not found
    put:
      tags:
        - Users
      security:
        - Bearer: []
      parameters:
        - name: realm
          in: path
          required: true
          description: The domain to retrieve the user from
          type: string
        - name: userid
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
        - name: data
          in: body
          description: user data to update
          required: true
          schema:
            $ref: '#/definitions/UserUpdateBody'
      responses:
        '200':
          description: Return the user with the specified id
        '404':
          description: Not found
  /spec:
    get:
      tags:
        - Specification
      responses:
        '200':
          description: Return the API specification
